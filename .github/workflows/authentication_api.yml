name: AuthenticationAPI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: vapor_username
          POSTGRES_PASSWORD: vapor_password
          POSTGRES_DB: kounty-users-test
        options: >-
          --health-cmd "pg_isready -U vapor_username"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Swift
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4 libpython3-dev libicu-dev libssl-dev libsqlite3-dev libblocksruntime-dev
          wget https://download.swift.org/swift-5.9-release/ubuntu2004/swift-5.9-RELEASE/swift-5.9-RELEASE-ubuntu20.04.tar.gz
          tar xzf swift-5.9-RELEASE-ubuntu20.04.tar.gz
          sudo mv swift-5.9-RELEASE-ubuntu20.04/usr /usr
          sudo rm -rf swift-5.9-RELEASE-ubuntu20.04*
          swift --version
          
      - name: Install LLVM
        run: |
          sudo apt-get install -y llvm clang lcov

      - name: Set up PostgreSQL environment variables
        run: |
          echo "DATABASE_HOST=postgres" >> $GITHUB_ENV
          echo "DATABASE_PORT=5432" >> $GITHUB_ENV
          echo "DATABASE_NAME=kounty-users-test" >> $GITHUB_ENV
          echo "DATABASE_USERNAME=vapor_username" >> $GITHUB_ENV
          echo "DATABASE_PASSWORD=vapor_password" >> $GITHUB_ENV

      - name: Resolve Dependencies
        run: swift package resolve --verbose

      - name: Run Unit Tests
        run: swift test --enable-code-coverage --verbose

      - name: Create Coverage Data
        run: |
          mkdir -p coverage
          llvm-profdata merge -sparse .build/debug/codecov/*.profraw -o merged.profdata
          llvm-cov export --format=lcov --instr-profile=merged.profdata .build/debug/kounty-apiPackageTests.xctest > coverage/lcov.info
    
      - name: Validate Minimum Coverage
        uses: mattpolzin/swift-codecov-action@0.7.5
        with:
         MINIMUM_COVERAGE: 0
         INCLUDE_TESTS: 'true'
        env:
         DANGER_GITHUB_API_TOKEN: ${{ secrets.ACTIONS_API_TOKEN }}
         
      - name: Post Test coverage
        uses: romeovs/lcov-reporter-action@v0.3.1
        with:
         lcov-file: coverage/lcov.info
